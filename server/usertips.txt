Manual "Testing" the server with the curl library
=================================================

## Files

<path> -- the file path within the "share system" user directory, e.g. "Photos\mydog.png".


Upload (POST):

    curl --form "file=@<path_to_be_uploaded>" http://<youruser>:<yourpassword>@127.0.0.1:5000/API/V1/files/<new_path>

Download (GET):

    curl http://<youruser>:<yourpassword>@127.0.0.1:5000/API/V1/files/<path>

Update (PUT):

    curl -X PUT --form "file=@<new_path>" "http://<youruser>:<yourpassword>@127.0.0.1:5000/API/V1/files/<path_to_be_updated>"


## Actions

Delete (POST):
	
    curl --form "filepath=<path>" http://<youruser>:<yourpassword>@127.0.0.1:5000/API/V1/actions/delete -X POST
    curl --data "filepath=<path>" http://<youruser>:<yourpassword>@127.0.0.1:5000/API/V1/actions/delete -X POST

Copy (POST):
	
    curl --data "src=<sourcepath>&dst=<dstpath>" http://<youruser>:<yourpassword>@127.0.0.1:5000/API/V1/actions/copy -X POST

Move (POST):

    curl --data "src=<sourcepath>&dst=<dstpath>" http://<youruser>:<yourpassword>@127.0.0.1:5000/API/V1/actions/move -X POST


## Users

NB: To create an user, <youruser> has to be a valid email address.

User signup (POST):

    curl -X post localhost:5000/API/V1/users/<youruser> --data "password=<yourpassword>"

User activation (PUT):

    curl -X put localhost:5000/API/V1/users/<youruser> --data "activation_code=<yourcode>"

User info (GET):

    curl localhost:5000/API/V1/users/<youruser> --user "<youruser>:<yourpassword>"


## Backdoors
NB: The server needs to be started with --debug option!

Create directly a new user without the email confirmation (PUT):

    curl -X PUT localhost:5000/API/V1/users/<youruser> --data "activation_code=BACKDOOR"

Users' info (GET):
    NB: you must be authenticated.

    All users' info:
    $ curl -X GET localhost:5000/API/V1/users/__all__ --user "<youruser>:<yourpassword>"

    Specific user's info:
    $ curl -X GET localhost:5000/API/V1/users/<any_username> --user "<youruser>:<yourpassword>"


Automated testing with nose and coverage
========================================

$ nosetests --with-coverage --cover-erase --cover-html --cover-package (modulename|directory)

